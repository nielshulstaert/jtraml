#summary description of the TraML conversion methods of jTraML
#sidebar toc

=== Overview ===

  * [#Conversion_Formats Conversion Formats]


  * [#TraML_Converter_Command_Line TraML Converter Command Line]


  * [#TraML_Converter_Web TraML Converter Web]

----
===Conversion Formats===
====ABI csv====
example transition:
{{{
# 564.9618,663.4081,10,LSTADPADASTIYAVVV.O95866.O95866-3.O95866-5.3y6,29.3
}}}
 
  # 564.9618 = precursor ion m/z (Q1)
  # 663.4081 = product ion m/z (Q3)
  # 10 = ???
  # LSTADPADASTIYAVVV = peptide sequence
  # O95866 = protein accession (A)
  # O95866-3 = protein accession (B)
  # O95866-5 = protein accession (C)
  # 3y6 = precursor charge 3+, fragment y6
  # 29.3 = centroid retention time (min)

<br>

====Thermo csv====
example transition:
{{{
# Q1,Q3,CE,Start time (min),Stop time (min),Polarity,Trigger,Reaction category,Name
# 651.8366,790.4038,25.5,18.61,28.61,1,1.00E+04,0,AAELQTGLETNR.2y7-1
}}}
 
  # 651.8366 = precursor ion m/z (Q1)
  # 790.4038 = product ion m/z (Q3)
  # 25.5 = collision energy
  # 18.61 = start time (min)
  # 28.61 = stop time (min)
  # 1 = polarity
  # 1.00E+04 = trigger
  # 0 = reaction category
  # AAELQTGLETNR.2y7-1 = name


<br>

====Agilent tsv====
example transition:
{{{
# Dynamic MRM
# Compound Name	ISTD?	Precursor Ion	MS1 Res	Product Ion	MS2 Res	Fragmentor	Collision Energy	Cell Accelerator Voltage	Ret Time (min)	Delta Ret Time	Polarity
# CSASVLPVDVQTLNSSGPPFGK.2y16-1	FALSE	1130.5681	Wide	1642.8233	Unit	125	39.8	5	42.35	5.00	Positive
}}}

	
  # CSASVLPVDVQTLNSSGPPFGK.2y16-1 = name
  # FALSE = ISTD (?)
  # 1130.5681 = precursor ion m/z (Q1)
  # Wide = MS1 resolution
  # 1642.8233 = product ion m/z (Q3)
  # Unit = MS2 resolution
  # 125 = fragmentor
  # 39.8 = collision energy
  # 5 = cell accelerator voltage
  # 42.35 = centroid retention time
  # 5.00 = delta retention time
  # Positive = polarity
 

----
===TraML Converter Command Line===
The TraML Converter is the starter class in the jtraml-core library.
So executing the following statement in the command line will launch the jTraML converter.

<code language="java">

java -jar jtraml-core-x.x.jar 

</code>

If no options are provided, then the command line usage will be displayed in the prompt.

<pre><code>

usage: TraMLConverter
----------------------
INFO
----------------------
The TraML converter command line tool takes an input file and an input type and generates an output file.
If the input type is a .TraML file, then the converter generates be a .TSV file.
Otherwise, if the input type is a .TSV file, then the converter generates a .TraML file.
----------------------
OPTIONS
----------------------
-exporttype <arg>   The available file
                     types:<TraML><thermo_csv><agilent_tsv><abi_csv>

-importtype <arg>   The available file
                     types:<TraML><thermo_csv><agilent_tsv><abi_csv>

-input <arg>        The transition input file

-output <arg>       The converted transition output file

-rtdelta <arg>      This delta retention time (minutes) is used when
                     appropriate (cfr. Wiki)

----------------------
http://code.google.com/p/jtraml/


</pre></code>




----
===TraML Converter Web===
[http://iomics.ugent.be/jtraml http://iomics.ugent.be/jtraml]